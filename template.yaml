AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  nft-transfer-events

  Sample SAM Template for nft-transfer-events monitoring and visualizing
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Parameters:
  StageName:
    Type: String
    Default: dev
    Description: (Required) Enter dev, prod. Default is dev.
    AllowedValues:
      - dev
      - prod
  EthProviderParameter:
    Type: String
    Description: Enter the URL endpoint of the Ethereum Provider (ex. Infura, Alchemy etc)
    NoEcho: true
  ERC721AddressParameter:
    Type: String
    Description: Enter contract ERC-721 to be monitored
    MaxLength: "42"

Resources:
  NFTTransferEventsAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref StageName
      Cors: "'*'"
      # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-controlling-access-to-apis.html
      Auth:
        DefaultAuthorizer: NFTEventsAuthorizer
        Authorizers:
          NFTEventsAuthorizer:
            FunctionArn: !GetAtt AuthorizerLambdaFunction.Arn

  AuthorizerLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: nft-lambdas/
      Handler: authorizer.lambdaAuthHandler
      Runtime: nodejs16.x
      Architectures:
        - x86_64  
  NFTTransferEventsViewFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: nft-lambdas/
      Handler: view.lambdaHandler
      Runtime: nodejs16.x
      Architectures:
        - x86_64
      Policies:
        # Give the Lambda service access to poll DynamoDB Stream
        - AmazonDynamoDBFullAccess
      Events:
        ApiEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /nft-transfers
            Method: get
            RestApiId: !Ref NFTTransferEventsAPI
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: false
        EntryPoints: 
        - view.ts
  NFTTransferEventsMonitorFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: nft-lambdas/
      Handler: monitor.lambdaMonitorHandler
      Runtime: nodejs16.x
      Architectures:
        - x86_64
      Policies:
        # Give the Lambda service access to poll DynamoDB Stream
        - AmazonDynamoDBFullAccess
      Events:
        CloudWatchEvent:
          Type: Schedule # More info about API Event Source: https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#schedule
          Properties:
            Schedule: rate(10 minutes)
            Name: nft-transfer-searching
            Description: Searches for Transfer events in a specific NFT smart contract
      MemorySize: 128
      Timeout: 100
      Environment:
        Variables:
          ETH_PROVIDER:
            Ref: EthProviderParameter
          FROM_BLOCK: 27634000
          CONTRACT_ADDRESS:
            Ref: ERC721AddressParameter

    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: false
        EntryPoints: 
        - monitor.ts

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  Region:
    Description: "Deploy Region"
    Value: !Ref AWS::Region
  NFTTransferEventsViewApi:
    Description: "API Gateway endpoint URL for Prod stage for NFT Transfer Events View function"
    # when the API Gateway was implicited created by Events, the following line was: Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/nft-transfers/"
    Value: !Sub "https://${NFTTransferEventsAPI}.execute-api.${AWS::Region}.amazonaws.com/${StageName}/nft-transfers/"
  NFTTransferEventsViewFunction:
    Description: "NFT Transfer Events View Lambda Function ARN"
    Value: !GetAtt NFTTransferEventsViewFunction.Arn
  NFTTransferEventsViewFunctionIamRole:
    Description: "Implicit IAM Role created for NFT Transfer Events View function"
    Value: !GetAtt NFTTransferEventsViewFunctionRole.Arn
